<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <!--Externalizing properties -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <bean class="org.springframework.core.io.FileSystemResource">
                    <constructor-arg value="appProperties.properties" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driverClassName}" />
        <property name="url" value="${db.training.url}" />
        <property name="username" value="${db.training.username}" />
        <property name="password" value="${db.training.passwd}" />
        <property name="initialSize" value="${db.training.initalSize}" />
        <property name="maxActive" value="${db.training.maxActive}" />
    </bean>

    <bean id="simpleJdbcTemplate" class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <!-- Using the util:constant notation to fetch constants instead of FieldRetrievingFactoryBean -->
    <bean id="dayFiveDao" class="com.perot.training.dayfive.DayFiveDaoImpl">
        <constructor-arg>
            <util:constant static-field="com.perot.training.dayfive.DayFiveMain.SERVICE_NAME" />
        </constructor-arg>
        <constructor-arg value="RED" />
        <property name="simpleJdbcTemplate" ref="simpleJdbcTemplate" />
    </bean>

    <bean id="dayFiveMain" class="com.perot.training.dayfive.DayFiveMain">
        <property name="personName" value="Deepak-Abraham" />
        <property name="personName2" value="Deepak Abraham" />
    </bean>
    
    <!-- Register custom property editors though this special bean
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="com.perot.training.dayfive.PersonName2" value="com.perot.training.dayfive.diffpkg.PersonName2AnotherEditor" />
            </map>
        </property>
    </bean>
    -->
    <!--  or a better thread safe way
    <bean class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="propertyEditorRegistrars">
            <list>
                <ref bean="customPropertyEditorRegistrar" />
            </list>
        </property>
    </bean>
    
    <bean id="customPropertyEditorRegistrar" class="com.perot.training.dayfive.CustomPropertyEditorRegistrar" />
    -->

</beans>
